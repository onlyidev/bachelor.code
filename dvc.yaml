stages:
  split:
    cmd: python scripts/split.py
    deps:
    - ${split.benign_dir}
    - ${split.malware_dir}
    outs:
    - ${train.benign}
    - ${train.malware}
    - ${valid.benign}
    - ${valid.malware}
    params:
    - split.test_size
    - split.random_state
    - split.benign_dir
    - split.malware_dir
    - split.unique_ratio
    - train.head
    - train.num_features
  train_detector:
    cmd: python train_detector.py
    deps:
      - ${train.benign}
      - ${train.malware}
    params:
      - split.random_state
      - train.benign
      - train.malware
  train_malgan:
    cmd: python main.py ${train.Z} ${train.batch_size} ${train.num_epochs} ${train.benign} --activation ${train.activation}
      ${train.malware}
    deps:
    - ${train.benign}
    - ${train.malware}
    params:
    - train.Z
    - train.batch_size
    - train.num_epochs
    - train.benign
    - train.malware
    - train.name
    - train.activation
    - train.estimators
    - dynamic.yaml:
      - detector.id
  train_mca:
    cmd: python mca.py
    deps:
    - ${train.benign}
    - ${train.malware}
    params:
    - train.mca
    - train.estimators
    - train.head
    - train.mca_components
    outs:
    - ${train.mca}:
        persist: true
  graph_mca:
    cmd: python scripts/graph_mca.py
    deps:
      - ${train.mca}
    outs:
      - outs/mca_scatter.html
  train_mca_classifier:
    cmd: python mca_classifier.py
    deps:
    - ${train.mca}
    params:
    - train.mca
    - train.estimators
  extract_normal_features:
    cmd: python lime_normal.py
    deps:
    - ${train.benign}
    - ${train.mca}
    - dynamic.yaml
    outs:
    - ${train.normal_features}:
        persist: true
    params:
    - train.benign
    - train.mca
    - train.normal_features
    - dynamic.yaml:
      - mca.id
      - mca_classifier.id'
  extract_normal_categorical_features:
    cmd: python lime_normal_categorical.py
    deps:
    - ${train.benign}
    - dynamic.yaml
    outs:
    - ${train.normal_categorical_features}:
        persist: true
    params:
    - train.benign
    - train.normal_categorical_features
    - dynamic.yaml:
      - detector.id
  experiment_base:
    cmd: PYTHONHASHSEED=0 python experiment.py normal
    deps:
      - ${valid.benign}
      - ${valid.malware}
      - dynamic.yaml
    params:
      - valid.benign
      - valid.malware
      - metrics.normal
      - dynamic.yaml:
        - malgan.id
        - detector.id
    metrics:
      - ${metrics.normal}
    outs:
      - ${metrics.normal_confusion}
  experiment_lime:
    cmd: PYTHONHASHSEED=0 python experiment.py lime
    deps:
      - ${valid.benign}
      - ${valid.malware}
      - ${train.mca}
      - ${train.normal_features}
      - dynamic.yaml
    params:
      - valid.benign
      - valid.malware
      - train.mca
      - train.normal_features
      - dynamic.yaml:
        - malgan.id
        - detector.id
        - mca.id
        - mca_classifier.id
    metrics:
      - ${metrics.lime}
      - ${metrics.lime_obf}
    outs:
      - ${metrics.lime_confusion}
      - ${metrics.lime_confusion_obf}
  experiment_lime_categorical:
    cmd: PYTHONHASHSEED=0 python experiment.py categorical
    deps:
      - ${valid.benign}
      - ${valid.malware}
      - ${train.normal_categorical_features}
      - dynamic.yaml
    params:
      - valid.benign
      - valid.malware
      - train.normal_categorical_features
      - dynamic.yaml:
        - malgan.id
        - detector.id
    metrics:
      - ${metrics.lime_cat}
      - ${metrics.lime_cat_obf}
    outs:
      - ${metrics.lime_cat_confusion}
      - ${metrics.lime_cat_confusion_obf}